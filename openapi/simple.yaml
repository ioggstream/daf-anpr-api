openapi: 3.0.0
info:
  contact:
    email: robipolli@gmail.com
    name: Roberto Polli
    url: https://twitter.com/ioggstream
  description: |
    Questo servizio ritorna la data e l'ora attuali in UTC.

    #### Documentazione
    Il servizio Ora esatta ritorna l'ora del server in formato RFC5424 (syslog).

    `2018-12-30T12:23:32Z`

    ##### Sottosezioni
    E' possibile utilizzare - con criterio - delle sottosezioni.

    #### Note

    Il servizio non richiede autenticazione, ma va' usato rispettando gli
    header di throttling esposti in conformita' alle Linee Guida del Modello di interoperabilita'.

    #### Informazioni tecniche ed esempi

    Esempio:

    ```
    http http://localhost:8443/datetime/v1/echo
    {
      'datetime': '2018-12-30T12:23:32Z'
    }
    ```
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Ora esatta.
  version: 1.0.0
  x-api-id: 00000000-0000-0000-0000-000000000000
  x-audience:
  - public
paths:
  /echo:
    get:
      description: |
        Ritorna un timestamp in formato RFC5424
        prendendola dal server attuale.
      operationId: get_echo
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timestampa'
          description: |
            Il server ha ritornato il timestamp.
          headers:
            Retry-After:
              description: |-
                Retry contacting the endpoint *at least* after seconds.
                See https://tools.ietf.org/html/rfc7231#section-7.1.3
              schema:
                format: int32
                type: integer
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
        '429':
          $ref: '#/components/responses/429TooManyRequests'
        '503':
          $ref: '#/components/responses/503ServiceUnavailable'
        default:
          $ref: '#/components/responses/default'
      summary: Ritorna un timestamp in formato RFC5424.
      tags:
      - public
servers:
- description: Test server
  url: https://api.example.com/datetime/v1
- description: Development server
  url: https://localhost:8443/datetime/v1
tags:
- description: Retrieve informations
  externalDocs:
    url: http://docs.my-api.com/pet-operations.htm
  name: public
components:
  headers:
    Retry-After:
      description: |-
        Retry contacting the endpoint *at least* after seconds.
        See https://tools.ietf.org/html/rfc7231#section-7.1.3
      schema:
        format: int32
        type: integer
    X-RateLimit-Limit:
      description: The number of allowed requests in the current period
      schema:
        format: int32
        type: integer
    X-RateLimit-Remaining:
      description: The number of remaining requests in the current period
      schema:
        format: int32
        type: integer
    X-RateLimit-Reset:
      description: The number of seconds left in the current period
      schema:
        format: int32
        type: integer
  responses:
    404NotFound:
      description: Not Found
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
    429TooManyRequests:
      description: Too many requests
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/X-RateLimit-Limit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/X-RateLimit-Remaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/X-RateLimit-Reset'
        Retry-After:
          $ref: '#/components/headers/Retry-After'
    503ServiceUnavailable:
      description: Service Unavailable
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      headers:
        Retry-After:
          $ref: '#/components/headers/Retry-After'
    default:
      description: Unexpected error
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
  schemas:
    Problem:
      properties:
        detail:
          description: |
            A human readable explanation specific to this occurrence of the
            problem.
          example: Connection to database timed out
          type: string
        instance:
          description: |
            An absolute URI that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.
          format: uri
          type: string
        status:
          description: |
            The HTTP status code generated by the origin server for this occurrence
            of the problem.
          example: 503
          exclusiveMaximum: true
          format: int32
          maximum: 600
          minimum: 100
          type: integer
        title:
          description: |
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
          type: string
        type:
          default: about:blank
          description: |
            An absolute URI that identifies the problem type.  When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          example: https://tools.ietf.org/html/rfc7231#section-6.6.4
          format: uri
          type: string
      type: object
    Timestampa:
      description: Un Timestamp in RFC5424
      properties:
        timestamp:
          example: '2018-12-30T12:23:32Z'
          format: date-time
          type: string
      type: object
